<style lang="less">
.p-teaching-index {
  position: relative;
  height: 100vh;
  .p-con-list {
    .p-con-con {
      width: 100%;
      position: relative;
      z-index: 99;
      margin-bottom: 20rpx;
      .p-c-name {
        font-weight: bold;
      }
      movable-area {
        height: 196rpx;
        width: calc(~'100% - 120rpx');
        movable-view {
          height: 196rpx;
          width: calc(~"100vw - 80rpx");
          z-index: 99;
          box-sizing: border-box;
        }
      }
      .p-con-info {
        position: relative;
        display: flex;
        align-items: center;
        box-sizing: border-box;
        font-size: 36rpx;
        color: #707070;
        height: 196rpx;
        padding: 30rpx;
        border: 3rpx solid #707070;
        background: #fff;
        z-index: 9;
        .p-c-img {
          margin-right: 74rpx;
          width: 136rpx;
          height: 136rpx;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          overflow: hidden;
          image {
            width: 136rpx;
            height: 136rpx;
          }
        }
        .p-c-name {
          font-size: 24rpx;
          color: #271818;
          font-weight: bold;
        }
        .p-c-mobile {
          font-size: 24rpx;
          color: #707070;
          margin-top: 10rpx;
        }
      }
      .p-delete {
        position: absolute;
        right: 0;
        top: 0;
        background: #f55454;
        width: 120rpx;
        height: 196rpx;
        line-height: 196rpx;
        z-index: 1;
        color: #fff;
        text-align: center;
        font-size: 30rpx;
      }
    }
  }
}
</style>
<template>
  <view class="p-teaching-index">
    <view class="p-con-list">
      <view
        class="p-con-con"
        wx:for="{{coachList}}"
        wx:key="{{ index }}"
        @tap="btnDetail({{item.coachId}})"
      >
        <movable-area>
          <movable-view
            out-of-bounds="true"
            direction="horizontal"
            x="{{item.xMove}}"
            inertia="true"
            data-productindex="{{index}}"
            bindtouchstart="handleTouchStart"
            bindtouchend="handleTouchEnd"
            bindchange="handleMovableChange">
            <view class="p-con-info">
              <view class="p-c-img">
                <image src="{{ item.coachImg }}" mode="aspectFill"></image>
              </view>
              <view class="p-c-right">
                <view class="p-c-name">{{ item.coachName}}</view>
                <view class="p-c-mobile">{{ item.mobile }}</view>
              </view>
              
            </view>
          </movable-view>
        </movable-area>
        <view class="p-delete" catchtap="handleDeleteCoach({{index}},{{item.coachId}})">删除</view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import api from '@/api/api.js';

export default class teachingIndex extends wepy.component {
  
  data = {
    startX: 0,
    startY: 0,
    storeId: "",
    token: "",
    coachList: [],
    modularType: "1",
  };

  computed = {};

  methods = {
    modular(...args) {
      this.modularType = args[0];
    },
    btnDetail(m) {
      wepy.navigateTo({
         url: `coachDetail?coachId=${m}&modularType=${this.modularType}`
      });
    },
    handleTouchStart(e) {
      this.data.coachList.forEach(function(v, i) {
        if (v.xMove != 0)
          //
          v.xMove = 0;
      });
      this.startX = e.touches[0].pageX;
    },
    handleTouchEnd(e) {
      if (
        e.changedTouches[0].pageX < this.startX &&
        e.changedTouches[0].pageX - this.startX <= -60
      ) {
        this.showDeleteButton(e);
      } else if (
        e.changedTouches[0].pageX > this.startX &&
        e.changedTouches[0].pageX - this.startX < 60
      ) {
        this.showDeleteButton(e);
      } else {
        this.hideDeleteButton(e);
      }
    },
    handleMovableChange(e) {
      if (e.detail.source === 'friction') {
        if (e.detail.x < -30) {
          this.showDeleteButton(e);
        } else {
          this.hideDeleteButton(e);
        }
      } else if (e.detail.source === 'out-of-bounds' && e.detail.x === 0) {
        this.hideDeleteButton(e);
      }
    },
    handleDeleteCoach(m,n) {//m:当前列的index,2:当前列的id
      var self = this;
      wx.showModal({
        title: "删除",
        content: "删除该教练",
        success(res) {
          if(res.confirm) {//点击确定；
            var request = api.deleteCrmOperateCoach({
              header: {
                'content-type': 'application/json',
                token: self.token
              },
              method: 'POST',
              data: {
                coachId: n,
                storeId: self.storeId
              }
            });
            request.then(res => {
              let result = res.data.body;
              if(result.res == "true") {
                wepy.showToast({
                  title: result.msg,
                  icon: "success",
                  duration: 2000,
                });
                self.coachList.splice(m,1);//将该教练从数组中删除；
                self.$apply();
              } else {
                wepy.showToast({
                  title: result.msg,
                  icon: "none",
                  duration: 2000,
                });
              }
            });
          }
        }
      });    
    }
  };

  /**
   * 显示删除按钮
   */
  showDeleteButton(e) {
    let productIndex = e.currentTarget.dataset.productindex;
    this.setXmove(productIndex, -65);
  }

  /**
   * 隐藏删除按钮
   */
  hideDeleteButton(e) {
    let productIndex = e.currentTarget.dataset.productindex;

    this.setXmove(productIndex, 0);
  }

  /**
   * 设置movable-view位移
   */
  setXmove(productIndex, xmove) {
    let productList = this.data.coachList;
    productList[productIndex].xMove = xmove;
    this.coachList = productList;
  }


  /** 
   * 获取教练列表 
  */
  getCoachList() {
    var request = api.getCrmOperateCoachList({
      header: {
        'content-type': 'application/json',
        token: this.token
      },
      method: 'POST',
      data: {
        storeId: this.storeId,
      }
    });
    request.then(res => {
      let result = res.data.body;
      this.coachList = result;
      this.coachList.forEach(function(ele, index) {
        //只操作为true的
        ele.xMove = 0;
        ele.coachImg = `${api.BASE_URL}downloadCrm.do?ossId=${ele.coachImg}`;
      });
      this.$apply();
    })
  };
  events = {};

  onLoad() {

    this.storeId = this.$parent.storeId;
    this.token = this.$parent.token;
    this.getCoachList();

  }
}
</script>
