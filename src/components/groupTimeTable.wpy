<style lang="less">
.p-group-timetable {
  position: relative;
  padding-bottom: 40rpx;
  .p-day-list {
    display: flex;
    justify-content: space-between;
    color: rgba(10, 4, 17, 0.4);
    margin-bottom: 30rpx;
    view {
      font-size: 30rpx;
      font-weight: bold;
      &.active {
        color: #f55454;
      }
    }
  }
  .p-con-list {
    .p-con-con {
      width: 100%;
      position: relative;
      z-index: 99;
      margin-bottom: 20rpx;
      .p-c-name {
        font-weight: bold;
      }
      movable-area {
        height: 140rpx;
        width: calc(~'100% - 100rpx');
        movable-view {
          height: 140rpx;
          width: calc(~'100vw - 80rpx');
          z-index: 99;
          box-sizing: border-box;
        }
      }
      .p-con-info {
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 140rpx;
        padding: 20rpx;
        background: #fff;
        font-size: 28rpx;
        color: #271818;
        font-weight: bold;
        box-sizing: border-box;
        border: 3rpx solid #707070;
        z-index: 9;
        & > view {
          display: flex;
          justify-content: space-between;
          align-items: center;
        }
        .p-c-bottom {
          font-size: 20rpx;
          span {
            padding: 0 5rpx;
          }
        }
      }
      .p-delete {
        position: absolute;
        right: 0;
        top: 0;
        background: #f55454;
        width: 100rpx;
        height: 140rpx;
        line-height: 140rpx;
        z-index: 1;
        color: #FEFEFE;
        text-align: center;
        font-size: 36rpx;
      }
    }
  }
}
</style>
<template>
  <view class="p-group-timetable">
    <view class="p-day-list">
      <view wx:for="{{ weekData }}" :class="{'active': weekNav == index }" wx:key="{{index}}" @tap="handleWeek({{index}})">
        <view>{{ item }}</view>
      </view>
    </view>
    <view class="p-con-list">
      <view
        class="p-con-con"
        wx:for="{{ groupTimeList }}"
        wx:key="{{ index }}"
        @tap="handleTimeDetail({{ item.coachLeagueId }})"
      >
        <movable-area>
          <movable-view
            out-of-bounds="true"
            direction="horizontal"
            x="{{item.xMove}}"
            inertia="true"
            data-productindex="{{index}}"
            bindtouchstart="handleTouchStart"
            bindtouchend="handleTouchEnd"
            bindchange="handleMovableChange"
          >
            <view class="p-con-info">
              <view>
                <view>{{ item.leagueName }}</view>
                <view>{{item.startTime}} - {{item.endTime}}</view>
              </view>
              <view>
                <view>{{ item.coachName }}</view>
                <view class="p-c-bottom">可预约人数<span>{{ item.peopleNumber }}</span>人</view>
              </view>
            </view>
          </movable-view>
        </movable-area>
        <view class="p-delete" catchtap="handleDeleteTime({{index}},{{item.coachLeagueId}})">删除</view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import api from '@/api/api.js';
import date from '@/utils/date.js';

export default class groupTimeTable extends wepy.component {

  components = {};

  data = {
    storeId: "",
    token: "",
    week: "",
    weekNav: "",
    startX: 0,
    startY: 0,
    weekData: ['周一','周二','周三','周四','周五','周六','周日'],
    groupTimeList: [],
  };

  computed = {};

  methods = {
    handleWeek(m) {
      this.weekNav = parseInt(m);
      this.getGroupTimeList(this.weekNav+1);
      this.$emit('time-emit',m);//将周几的情况告诉父组件，以待添加新课标成功之后返回时候刷新
    },
    handleTimeDetail(m) {
      wepy.navigateTo({
        url: `groupTimeDetail?coachLeagueId=${m}`
      });
    },
    handleTouchStart(e) {
      this.data.groupTimeList.forEach(function(v, i) {
        if (v.xMove != 0)
          //只操作为true的
          v.xMove = 0;
      });
      this.startX = e.touches[0].pageX;
    },
    handleTouchEnd(e) {
      if (
        e.changedTouches[0].pageX < this.startX &&
        e.changedTouches[0].pageX - this.startX <= -30
      ) {
        this.showDeleteButton(e);
      } else if (
        e.changedTouches[0].pageX > this.startX &&
        e.changedTouches[0].pageX - this.startX < 30
      ) {
        this.showDeleteButton(e);
      } else {
        this.hideDeleteButton(e);
      }
    },
    handleMovableChange(e) {
      if (e.detail.source === 'friction') {
        if (e.detail.x < -30) {
          this.showDeleteButton(e);
        } else {
          this.hideDeleteButton(e);
        }
      } else if (e.detail.source === 'out-of-bounds' && e.detail.x === 0) {
        this.hideDeleteButton(e);
      }
    },
    handleDeleteTime(m,n) {//m:当前列的index、n:当前列的userId；
      var self = this;
      wx.showModal({
        title: "删除",
        content: "删除该团课课表",
        success(res) {
          if(res.confirm) {//点击确定；
            var request = api.deleteCrmOperateCoachLeague({
              header: {
                'content-type': 'application/json',
                token: self.token
              },
              method: 'POST',
              data: {
                coachLeagueId: n,
                storeId: self.storeId
              }
            });
            request.then(res => {
              let result = res.data.body;
              if(result.res == "true") {
                wepy.showToast({
                  title: result.msg,
                  icon: "success",
                  duration: 2000,
                });
                self.groupTimeList.splice(m,1);//从列表将改销售员去掉；
                self.$apply();
              } else {
                wepy.showToast({
                  title: result.msg,
                  icon: "none",
                  duration: 2000,
                });
              }
            });
            
          };
        },
      });
    }
  };

  /**
   * 显示删除按钮
   */
  showDeleteButton(e) {
    let productIndex = e.currentTarget.dataset.productindex;
    this.setXmove(productIndex, -55);
  }

  /**
   * 隐藏删除按钮
   */
  hideDeleteButton(e) {
    let productIndex = e.currentTarget.dataset.productindex;

    this.setXmove(productIndex, 0);
  }

  /**
   * 设置movable-view位移
   */
  setXmove(productIndex, xmove) {
    let productList = this.groupTimeList;
    productList[productIndex].xMove = xmove;
    this.groupTimeList = productList;
  };
  updateList(...args) {
    let newWeekDay = args[0];
    this.getGroupTimeList(newWeekDay+1);
  };
  getGroupTimeList(weekday) {
    var request = api.getCrmOperateCoachLeagueList({
      header: {
        'content-type': 'application/json',
        token: this.token
      },
      method: 'POST',
      data: {
        week: weekday,
        storeId: this.storeId,
      }
    });
    request.then(res => {
      let result = res.data.body;
      this.groupTimeList = result;
      this.groupTimeList.forEach(function(v, i) {
        //滑动位置初始化
        v.xMove = 0;
      });
      this.$apply();
    })
  };
  events = {};
  onLoad() {
    //注意：这是组件获取不了全局变量
    this.storeId = this.$parent.storeId;
    this.token = this.$parent.token;
    this.week = date.formatWeek(new Date());
    if(this.week == 0) {
      this.week = 7
    };
    this.weekNav = this.week - 1;
    this.weekData[this.week-1] = "今天";
    this.getGroupTimeList(this.weekNav+1);
  }
}
</script>
