<style lang="less">
.p-login {
  position: relative;
  padding: 187rpx 79rpx 0;
  .hide {
    opacity: 0 !important;
  }
  .show {
    opacity: 1 !important;
  }
  .p-title {
    font-size: 47rpx;
    color: #5c5c5d;
    margin-bottom: 105rpx;
  }
  .p-input-section {
    position: relative;
    border-bottom: 1rpx solid #5c5c5d;
    font-size: 36rpx;
    margin-bottom: 40rpx;
    input {
      height: 80rpx;
    }
    input::-webkit-input-placeholder {
      color: #5c5c5d;
    }
    .p-code {
      width: 320rpx;
    }
    .p-error {
      position: absolute;
      bottom: -50rpx;
      left: 0;
      font-size: 24rpx;
      color: #f55454;
      opacity: 0;
      transition: all 2s;
    }
  }
  .btn-code {
    position: absolute;
    right: 0;
    top: -10rpx;
    width: 250rpx;
    height: 70rpx;
    line-height: 70rpx;
    background: #5c5c5d;
    border-radius: 70rpx;
    color: #fff;
    font-size: 39rpx;
    text-align: center;
    z-index: 9;
  }

  .p-btn {
    margin: 140rpx auto;
    width: 558rpx;
    height: 90rpx;
    line-height: 90rpx;
    text-align: center;
    font-size: 45rpx;
    color: #fff;
    background: #5c5c5d;
    border-radius: 108rpx;
  }
  .showTohide {
    animation: showTohide 3s ease-out;
  }
  @keyframes showTohide {
    0%,
    100% {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    80% {
      opacity: 1;
    }
  }
  @-webkit-keyframes showTohide {
    0%,
    100% {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    80% {
      opacity: 1;
    }
  }
}
</style>
<template>
  <view class="p-login">
    <view class="p-title">验证码登录</view>
    <view class="p-input-section">
      <input placeholder="手机号" type="number" value="{{mobile}}" @input="getMobile" maxlength="11"/>
    </view>
    <view class="p-input-section">
      <input class="p-code" placeholder="请输入验证码" type="number" value="{{idcode}}" @input="getCode"/>
      <view class="btn-code" @tap="getMsg">{{codeTxt}}</view>
      <view class="p-error {{isError?'showTohide':''}}" animation="{{animation}}">{{ errorMsg }}</view>
    </view>

    <view class="p-btn" @tap="toLogin">登录</view>
  </view>
</template>

<script>
import wepy from 'wepy';
import api from '@/api/api.js';
const regPhone = /^[1][3,4,5,7,8][0-9]{9}$/;
export default class Login extends wepy.page {
  config = {
    navigationBarTitleText: '登录页面'
  };
  components = {};

  data = {
    codeTxt: '获取验证码',
    countdown: 60,
    mobile: '',
    idcode: '',
    errorMsg: '我错了',
    isError: false,
    isTap: true //防止60s内重复点击
  };

  computed = {};

  methods = {
    getMobile(e) {
      // console.log(e);
      this.mobile = e.detail.value;
    },
    getCode(e) {
      this.idcode = e.detail.value;
    },
    getMsg() {
      if (this.isTap) {
        this.check();
        if (this.mobile != '' && regPhone.test(this.mobile)) {
          let request = api.getMessageData({
            method: 'POST',
            data: {
              mobile: this.mobile
            }
          });
          request.then(res => {
            console.log(res);
            var result = res.data.body;
            if (result.result == 3) {
              //成功
              this.countDown();
            } else {
              //失败
              this.isError = true;
              this.errorMsg = result.msg;
              this.$apply();
              this.timeOut();
            }
            // 版本3.0 不能同步更新，需要手动调用 this.$apply()  更新视图
            // this.$apply()
          });
        }
      }
    },
    toLogin() {
      this.check();
      if (this.idcode == '') {
        this.isError = true;
        this.errorMsg = '请输入验证码';
        this.timeOut();
      } else if (regPhone.test(this.mobile) && this.idcode != '') {
        console.log(api);
        let request = api.getLoginData({
          method: 'POST',
          data: {
            mobile: this.mobile,
            code: this.idcode
          }
        });
        request.then(res => {
          console.log(res);
          var result = res.data.body;
          if (result.result == 3) {
            //成功
            var crmUser = result.crmUser;
            this.$parent.globalData.storeId = crmUser.storeId;
            this.$parent.globalData.userType = crmUser.userType;
            this.$parent.globalData.token = crmUser.token;
            this.$parent.globalData.userId = crmUser.userId;
            this.$parent.globalData.storeSort = crmUser.storeSort;

            wepy.setStorage({
              key: 'sessionid',
              data: {
                storeId: crmUser.storeId,
                userType: crmUser.userType,
                token: crmUser.token,
                userId: crmUser.userId,
                storeSort: crmUser.storeSort
              }
            });
            this.$apply();

            if (crmUser.userType == 2) {
              //员工
              wepy.navigateTo({
                url: '../staff/index'
              });
            } else if (crmUser.userType == 1) {
              //老板
              wepy.navigateTo({
                url: '../boss/modular'
              });
            }
          } else {
            //失败
            this.isError = true;
            this.errorMsg = result.body.msg;
            this.$apply();
            this.timeOut();
          }
        });
      }
    }
  };
  countDown() {
    let that = this;
    if (that.countdown == 0) {
      that.isTap = true;
      that.codeTxt = '获取验证码';
      that.countdown = 60;
      that.$apply();
    } else {
      that.isTap = false;
      that.countdown--;
      that.codeTxt = `${that.countdown}s`;
      // console.log(this.codeTxt);
      that.$apply();
      setTimeout(() => {
        that.countDown();
      }, 1000);
    }
  }
  timeOut() {
    setTimeout(() => {
      this.isError = false;
      this.errorMsg = '';
      this.$apply();
    }, 3000);
  }
  check() {
    if (this.mobile == '') {
      this.isError = true;
      this.errorMsg = '手机号不能为空!';
      this.timeOut();
    } else if (!regPhone.test(this.mobile)) {
      this.isError = true;
      this.errorMsg = '请输入正确的手机号！';
      this.timeOut();
    }
  }
  events = {};

  onLoad() {
    let self = this;
    self.animation = wx.createAnimation({
      duration: 4000,
      timingFunction: 'ease',
      delay: 0
    });
  }
}
</script>
