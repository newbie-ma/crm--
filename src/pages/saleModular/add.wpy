<style lang="less">
.p-boss-add {
  position: relative;
  height: 100vh;
  padding: 0 40rpx;
  .p-section-1 {
    display: flex;
    padding-top: 80rpx;
    .left {
      flex: 1;
      .p-c {
        width: 400rpx;
        margin: 24rpx 0;
        display: flex;
        align-items: center;
        span {
          font-size: 36rpx;
          color: #707070;
        }
        input {
          flex: 1;
          margin-left: 15rpx;
          padding: 0 10rpx;
          border-bottom: 1rpx solid #707070;
        }
      }
      .p-c-1 {
        span {
          font-size: 50rpx;
        }
        input {
          font-size: 50rpx;
          font-weight: 600;
        }
      }
      .p-c-2 {
        i {
          border: 1rpx solid rgba(112, 112, 122, 0.2);
          color: rgba(112, 112, 122, 0.2);
          // opacity: 0.2;
          margin-left: 20rpx;
          display: inline-block;
          font-size: 30rpx;
          width: 40rpx;
          height: 40rpx;
          text-align: center;
          line-height: 40rpx;
          margin-left: 40rpx;
          &.active {
            border: 1rpx solid #f55454;
            color: #f55454;
          }
        }
      }
      .p-c-3 {
        input {
          font-size: 32rpx;
        }
      }
    }
  }
  .p-d-wrap {
    margin-top: 70rpx;
    .p-title {
      font-size: 33rpx;
      color: #707070;
    }
    picker,
    input {
      width: 100%;
      border-bottom: 1px solid #707070;
      margin-top: 20rpx;
      padding: 10rpx;
      height: 60rpx;
    }
  }
  .p-fixed {
    position: fixed;
    bottom: 70rpx;
    left: 0;
    padding: 0 40rpx;
    width: 100%;
    box-sizing: border-box;
    display: flex;
    justify-content: space-between;
    z-index: 9;
    .p-btn {
      width: 262rpx;
      height: 70rpx;
      line-height: 70rpx;
      border-radius: 74rpx;
      text-align: center;
      font-size: 40rpx;
      color: #fff;
      &.cancle {
        background: rgba(23, 4, 4, 0.3);
      }
      &.sure {
        background: #f55454;
      }
    }
  }
}
</style>
<template>
  <view class="p-boss-add">
    <view class="p-section-1">
      <view class="left">
        <view class="p-c p-c-1">
          <span>姓名:</span>
          <input type="text" value="{{nameVal}}" @input="nameFun"/>
        </view>
        <view class="p-c p-c-2">
          <span>性别:</span>
          <i :class="{active: gender == 1}" @tap="sex(1)">男</i>
          <i :class="{active: gender == 2}" @tap="sex(2)">女</i>
        </view>
        <view class="p-c p-c-2">
          <span class="p-age">年龄:</span>
          <input type="number" value="{{ageVal}}" @input="ageFun"/>
        </view>
      </view>
    </view>
    <view class="p-d-wrap">
      <view class="p-title">入职时间：</view>
      <picker
        mode="date"
        value="{{pickerVal}}"
        start="2000-01-01"
        end="{{ endTime }}"
        @change="pickerFun"
      >{{pickerVal}}</picker>
    </view>
    <view class="p-d-wrap">
      <view class="p-title">电话：</view>
      <input type="number" value="{{mobileVal}}" @input="mobileFun"/>
    </view>
    <view class="p-fixed">
      <view class="p-btn cancle" @tap="btnCancle">取消</view>
      <view class="p-btn sure" @tap="btnSure">确定</view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import api from '@/api/api.js';
import dateTime from '@/utils/date.js';
const regPhone = /^[1][3,4,5,7,8][0-9]{9}$/;
const regNumber = /^[0-9]*$/;

export default class saleModularAdd extends wepy.page {
  config = {
    navigationBarTitleText: '销售员添加'
  };
  components = {};

  data = {
    gender: 1,
    nameVal: '',
    ageVal: '',
    pickerVal: '',
    endTime: '',
    mobileVal: '',
    storeId: '',
    token: '',
    headImg: "",

  };

  computed = {};

  methods = {
    sex(index) {
      this.gender = parseInt(index);
    },
    nameFun(e) {
      this.nameVal = e.detail.value;
    },
    ageFun(e) {
      this.ageVal = parseInt(e.detail.value);
    },
    pickerFun(e) {
      this.pickerVal = e.detail.value;
    },
    mobileFun(e) {
      this.mobileVal = e.detail.value;
    },
    btnCancle() {
      wepy.navigateBack({
        delta: 1
      });
    },
    btnSure() {
      if(this.checkVal()) {
        var request = api.saveCrmUser({
          header: {
            'content-type': 'application/json',
            token: this.token
          },
          method: 'POST',
          data: {
            name: this.nameVal,
            age: this.ageVal,
            sex: this.gender,
            entryTime: this.pickerVal + " 00:00:00",
            mobile: this.mobileVal,
            storeId: this.storeId,
          }
        });
        request.then(res => {
          console.log(res);
          let result = res.data.body;
          if(result.res == "true") {
            wepy.showToast({
              title: result.msg,
              icon: 'success',
              duration: 2000
            });
            setTimeout(() => {
              wepy.navigateBack({
                delta: 1
              })
            }, 2000);
          } else {
            wepy.showToast({
            title: result.msg,
            icon: 'none',
            duration: 2000
          });
          }
          
        })
      }
    }
  };
  checkVal() {
    if (this.nameVal == '') {
      wepy.showToast({
        title: '请输入姓名',
        icon: 'none',
        duration: 2000
      });
      return false;
    } else if (this.ageVal == '') {
      wepy.showToast({
        title: '请输入年龄',
        icon: 'none',
        duration: 2000
      });
      return false;
    } else if (this.mobileVal == '') {
      wepy.showToast({
        title: '请输入手机号码',
        icon: 'none',
        duration: 2000
      });
      return false;
    } else if (!regNumber.test(this.ageVal)) {
      wepy.showToast({
        title: '年龄必须为数字',
        icon: 'none',
        duration: 2000
      });
      return false;
    } else if (!regPhone.test(this.mobileVal)) {
      wepy.showToast({
        title: '请输入正确的手机号',
        icon: 'none',
        duration: 2000
      });
      return false;
    } else {
      return true;
    }
  }
  events = {};

  onLoad() {
    this.pickerVal = this.endTime = dateTime.formatTime(new Date());
    this.storeId = this.$parent.globalData.storeId;
    this.token = this.$parent.globalData.token;
  }
}
</script>
