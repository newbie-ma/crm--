<style lang="less">
.p-boss-edit {
  position: relative;
  height: 100vh;
  padding: 0 54rpx;
  .hide {
    display: none;
  }
  .show {
    display: block;
  }
  .p-section-1 {
    padding-top: 80rpx;
    .left {
      display: flex;
      align-items: center;
      color: #707070;
      .p-title {
        font-size: 40rpx;
        font-weight: 600;
      }
      input {
        flex: 1;
        font-size: 45rpx;
        font-weight: 600;
        border-bottom: 1rpx solid #707070;
        margin-left: 20rpx;
        padding: 5px;
      }
    }
  }
  .p-section-2 {
    margin-top: 24rpx;
    .p-col-1 {
      display: flex;
      justify-content: space-between;
      align-items: center;
      .left {
        display: flex;
        align-items: center;
        flex: 1;
        i {
          border: 1rpx solid rgba(112, 112, 122, 0.2);
          color: rgba(112, 112, 122, 0.2);
          // opacity: 0.2;
          margin-left: 20rpx;
          display: inline-block;
          font-size: 30rpx;
          width: 40rpx;
          height: 40rpx;
          text-align: center;
          line-height: 40rpx;
          &.active {
            border: 1rpx solid #f55454;
            color: #f55454;
          }
          &:last-child {
            margin-left: 40rpx;
          }
        }
      }
      .right {
        flex: 1;
        display: flex;
        .p-age {
          margin-right: 10rpx;
        }
        input {
          flex: 1;
          border-bottom: 1rpx solid #707070;
          padding-left: 20rpx;
          color: #707070;
        }
      }
    }
    .p-col-2,
    .p-col-3 {
      display: flex;
      align-items: center;
      margin: 36rpx 0;
      .p-title {
        margin-right: 10rpx;
        white-space:pre;
      }
      input,picker {
        flex: 1;
        border-bottom: 1rpx solid #707070;
        padding-left: 20rpx;
        color: #707070;
      }
    }
  }
  .p-section-3 {
    position: relative;
    display: flex;
    margin-top: 100rpx;
    .p-btn {
      width: 154rpx;
      height: 60rpx;
      line-height: 60rpx;
      text-align: center;
      font-size: 32rpx;
      margin-right: 30rpx;
      color: #707070;
      border-radius: 6rpx;
      background: rgba(10, 1, 1, 0.2);
      font-weight: bold;
      &.active {
        background: #f55454;
        color: #fff;
      }
    }
  }
  .p-fixed {
    position: fixed;
    bottom: 70rpx;
    left: 0;
    padding: 0 40rpx;
    width: 100%;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: space-between;
    background: #fff;
    z-index: 9;
    .p-btn {
      width: 274rpx;
      height: 70rpx;
      line-height: 70rpx;
      border-radius: 70rpx;
      text-align: center;
      font-size: 40rpx;
      color: #fff;
      &.cancle {
        background: rgba(23, 4, 4, 0.3);
      }
      &.sure {
        background: #f55454;
      }
    }
  }
}
</style>
<template>
  <view class="p-boss-edit">
    <view class="p-section-1">
      <view class="left">
        <view class="p-title">姓名</view>
        <input value="{{nameVal}}" @input="nameFun" />
      </view>
    </view>
    <view class="p-section-2">
      <view class="p-col-1">
          <view class="left">
            <view class="p-sex">性别：</view>
            <i :class="{active: gender == 1}" @tap="sex(1)">男</i><i :class="{active: gender == 2}" @tap="sex(2)">女</i>
          </view>
          <view class="right">
            <view class="p-age">年龄：</view>
            <input value="{{ageVal}}" type="number" @input="ageFun" />
          </view>
      </view>  
      <view class="p-col-2">
          <view class="p-title">入职时间：</view>
          <picker mode="date" value="{{pickerVal}}" start="2000-01-01" end="{{ endTime }}" @change="pickerFun">
            <view>{{pickerVal}}</view>
          </picker>
      </view>  
      <view class="p-col-3">
          <view class="p-title">电      话：</view>
          <input value="{{mobileVal}}" type="number" @input="mobileFun" />
      </view>  
    </view>
    <view class="p-section-3">
      <view class="p-btn" :class="{'active':isOnjob == '1000'}" @tap="onJob('1000')">在职</view>
      <view class="p-btn" :class="{'active':isOnjob == '1100'}" @tap="onJob('1100')">离职</view>
    </view>
    <view class="p-fixed">
      <view class="p-btn cancle" @tap="btnCancle">取消</view>
      <view class="p-btn sure" @tap="btnSure">确定</view>
    </view>
  </view>  
</template>

<script>
import wepy from 'wepy';
import api from '@/api/api.js';
import dateTime from '@/utils/date.js';
const regPhone = /^[1][3,4,5,7,8][0-9]{9}$/;
const regNumber = /^[0-9]*$/;

export default class saleModularEdit extends wepy.page {
  config = {
    navigationBarTitleText: '编辑销售员'
  };
  components = {};

  data = {
    token: "",
    gender: 0,
    vShow: true,
    eStatus: true,
    nameVal: '',
    ageVal: '',
    pickerVal: '',
    mobileVal: '',
    isOnjob: '1000',
    salemanid: "",
    saleManData: {},
    endTime: "",
  };

  computed = {};

  methods = {
    sex(index) {
      //性别选择
      this.gender = parseInt(index);
    },
    nameFun(e) {
      this.nameVal = e.detail.value;
    },
    ageFun(e) {
      this.ageVal = parseInt(e.detail.value);
    },
    pickerFun(e) {
      this.pickerVal = e.detail.value;
    },
    mobileFun(e) {
      this.mobilVal = e.detail.value;
    },
    onJob(m) {
      this.isOnjob = m;
    },
    btnCancle() {
      wepy.navigateBack({
        delta: 1
      });
    },
    btnSure() {
      if(this.checkVal()) {
        var data = {
          name: this.nameVal,
          age: this.ageVal,
          sex: this.gender,
          mobile: this.mobileVal,
          userId: this.salemanid,
          entryTime: this.pickerVal+" 00:00:00",
          state: this.isOnjob
        };
        var request = api.updateUser({
          header: {
            'content-type': 'application/json',
            token: this.token
          },
          method: 'POST',
          data: data,
        });
        request.then(res => {
          console.log(res);
          let result = res.data.body;
          if(result.res == "true") {
            wepy.showToast({
              title: result.msg,
              icon: "success",
              duration: 2000,
            });
            setTimeout(() => {
              wepy.navigateBack({
                delta: 1
              })
            }, 2000);
          } else {
            wepy.showToast({
              title: result.msg,
              icon: "none",
              duration: 2000,
            });
          }
        })
      };
    }
  };
  getSaleManDetail() {
    var request = api.getCrmUser({
      header: {
        'content-type': 'application/json',
        token: this.token
      },
      method: 'POST',
      data: {
        userId: this.salemanid,
      }
    });
    request.then(res => {
      let result = res.data.body;
      this.saleManData = result;
      this.nameVal = result.name;
      this.gender = result.sex;
      this.ageVal = result.age;
      this.pickerVal = result.entryTime;
      this.mobileVal = result.mobile;
      this.isOnjob = result.state;
      this.$apply();
    });
  };
  checkVal() {
    if (this.nameVal == '') {
      wepy.showToast({
        title: '请输入姓名',
        icon: 'none',
        duration: 2000
      });
      return false;
    } else if (this.ageVal == '') {
      wepy.showToast({
        title: '请输入年龄',
        icon: 'none',
        duration: 2000
      });
      return false;
    } else if (this.mobileVal == '') {
      wepy.showToast({
        title: '请输入手机号码',
        icon: 'none',
        duration: 2000
      });
      return false;
    } else if (!regNumber.test(this.ageVal)) {
      wepy.showToast({
        title: '年龄必须为数字',
        icon: 'none',
        duration: 2000
      });
      return false;
    } else if (!regPhone.test(this.mobileVal)) {
      wepy.showToast({
        title: '请输入正确的手机号',
        icon: 'none',
        duration: 2000
      });
      return false;
    } else {
      return true;
    }
  }
  events = {};
  
  onLoad(option) {
    this.endTime = dateTime.formatTime(new Date());
    this.token = this.$parent.globalData.token;
    this.salemanid = parseInt(option.salemanid);
    this.getSaleManDetail();
  }
}
</script>
